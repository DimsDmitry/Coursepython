▎Конспект лекции: Определение исключений в Python

▎1. Введение в исключения

• Что такое исключения?

  • Исключения — это события, которые нарушают нормальное выполнение программы.

  • Используются для обработки ошибок и других необычных ситуаций.

• Зачем нужны исключения?

  • Позволяют разделять обычный код и обработку ошибок.

  • Упрощают отладку и делают код более читаемым.

▎2. Основные виды исключений

• Системные исключения: возникают из-за ошибок в работе программы.

  • Примеры: ZeroDivisionError, IndexError, TypeError.


• Пользовательские исключения: создаются пользователем для обработки специфических условий.

▎3. Обработка исключений

• Блоки try-except

  • Синтаксис:

    try:
        # Код, который может вызвать исключение
    except SomeException as e:
        # Код обработки исключения


• Множественные except

  • Можно обрабатывать разные типы исключений:

    try:
        # Код
    except (TypeError, ValueError) as e:
        # Обработка нескольких исключений


• Блок finally

  • Используется для выполнения кода независимо от того, произошло исключение или нет:

    try:
        # Код
    except SomeException:
        # Обработка исключения
    finally:
        # Код, который всегда выполняется


▎4. Создание пользовательских исключений

• Определение нового класса, наследующего от Exception:

    class MyCustomError(Exception):
        pass

    raise MyCustomError("Сообщение об ошибке")


▎5. Пример использования исключений

• Пример обработки деления на ноль:

    def divide(a, b):
        try:
            return a / b
        except ZeroDivisionError:
            return "Ошибка: Деление на ноль!"

    print(divide(10, 0))  # Вывод: Ошибка: Деление на ноль!


▎6. Заключение

• Исключения — мощный инструмент для обработки ошибок в Python.

• Правильное использование блоков try, except, и finally позволяет писать надежный и понятный код.

• Пользовательские исключения помогают создавать более специализированные решения для обработки ошибок.

▎7. Вопросы и обсуждение

• Каковы преимущества использования исключений по сравнению с обычными проверками ошибок?

• Когда лучше использовать пользовательские исключения?