Цель задания:

Разработать и реализовать систему управления библиотекой, которая позволяет добавлять книги, отображать их, а также
сохранять и загружать данные из файла.

▎Описание программы:

Программа состоит из двух основных классов: Book и Library. Класс Book представляет отдельную книгу с её заголовком,
автором и годом издания. Класс Library управляет коллекцией книг, предоставляет методы для добавления книг,
отображения списка книг, а также сохранения и загрузки данных из файла.

▎Задание:

1. Создание класса Book:

   • Реализуйте класс Book, который должен содержать:

     • Конструктор __init__, принимающий три параметра: title, author, и year.

     • Метод __str__, который возвращает строковое представление книги в формате: "Название книги by Автор (Год)".

2. Создание класса Library:

   • Реализуйте класс Library, который должен содержать:

     • Конструктор __init__, инициализирующий пустой список для хранения книг.

     • Метод add_book(self, book), который добавляет книгу в библиотеку.

     • Метод display_books(self), который выводит на экран все книги в библиотеке. Если библиотека пуста,
     выводите сообщение "Библиотека пуста."

     • Метод save_to_file(self, filename), который сохраняет все книги в указанный файл, например в текстовом формате

     • Метод load_from_file(self, filename), который загружает книги из указанного файла.
     Если файл не найден, выводите сообщение "Файл не найден."

3. Реализация главного цикла программы:

   • В функции main() создайте экземпляр класса Library.

   • Загружайте книги из файла library.txt при запуске программы.

   • Реализуйте текстовое меню с возможностью выбора следующих действий:

     1. Добавить книгу.

     2. Показать все книги.

     3. Сохранить книги в файл.

     4. Выход из программы.

   • Обрабатывайте пользовательский ввод и выполняйте соответствующие действия.

4. Тестирование:

   • Протестируйте программу, добавив несколько книг, отобразив их, сохранив в файл и снова загрузив из файла.
   Убедитесь, что данные сохраняются и загружаются корректно.

5. Дополнительные задания (по желанию):

   • Добавьте возможность удаления книги из библиотеки.

   • Реализуйте поиск книг по автору или названию.

   • Добавьте обработку ошибок для неверного ввода данных пользователем.

▎Ожидаемый результат:

В результате выполнения задания у вас должна получиться рабочая программа для управления библиотекой,
которая позволяет добавлять, отображать, сохранять и загружать книги. Программа должна быть интуитивно понятной
и удобной в использовании.


Пример работы проекта:


1. Добавить книгу
2. Показать все книги
3. Сохранить книги в файл
4. Выход
Выберите действие:
1
Введите название книги: >? Граф Монте Кристо
Введите автора книги: >? А. Дюма
Введите год издания: >? 2020
1. Добавить книгу
2. Показать все книги
3. Сохранить книги в файл
4. Выход
Выберите действие:
1
Введите название книги: >? Капитанская Дочка
Введите автора книги: >? А. Пушкин
Введите год издания: >? 1995
1. Добавить книгу
2. Показать все книги
3. Сохранить книги в файл
4. Выход
Выберите действие:
3
Книги сохранены в файл.
1. Добавить книгу
2. Показать все книги
3. Сохранить книги в файл
4. Выход
Выберите действие:
4

Работа завершена.